if (str[i].Length > j && str[i][j] == 'o')
                        {
                            // either one- or two-digit
                            if (str[i].Length >= j+4 && str[i][j+2] == ' ')
                            {
                                // single-digit, e.g. "o1 0"
                                num_IOS = str[i][j+1] - '0';
                                value   = str[i][j+3] - '0';
                            }
                            else
                            {
                                // two-digit, e.g. "o14 1"
                                num_IOS = (str[i][j+1] - '0') * 10 + (str[i][j+2] - '0');
                                value   = str[i][j+4] - '0';
                            }

                            bool actual = frm1.outp[num_IOS - 1];
                            bool wanted = (value == 1);

                            if (actual != wanted)
                            {
                                fail = true;
                                var msg = $"Test failed while calling this command line (this is not a syntax error):\n" +
                                          $"{str[i]} ({link} > line {i+1})\n\nContinue anyway?";
                                if (MessageBox.Show(msg, "Test failed!", MessageBoxButtons.YesNo, MessageBoxIcon.Error)
                                        != DialogResult.Yes)
                                {
                                    return false;
                                }
                                log_content += $"\r\n>>> Test failed with \"{str[i]}\" ({link} > line {i+1}) <<<\r\n\r\n";
                            }
                        }
