Réflexion durant 16 secondes

Here’s exactly what you need to change to turn your “FORCE SENSORS” pane into “FORCE LLS” on PC12/PC21, and limit its cell values to just “NO   ” ↔ “YES  ”:

---

1) **Make the GroupBox’s title dynamic**  
   Right after `InitializeComponent()` in your constructor (or in `Form1_Load`), add:

   ```csharp
   // after InitializeComponent();
   if (BenchTypeValue == "PC12" || BenchTypeValue == "PC21")
       groupBox6.Text = "FORCE LLS";
   else
       groupBox6.Text = "FORCE SENSORS";
   ```

2) **Seed the grid with “NO   ” when you initialize**  
   Replace your existing `Init_F_SENSORS_Cells()` entirely with this:

   ```csharp
   public void Init_F_SENSORS_Cells()
   {
       UInt16 force_sensor = 24;               // total number of sensors
       int cols = dataGridView5.ColumnCount;
       int neededRows = (force_sensor + cols - 1) / cols;
       dataGridView5.Rows.Clear();
       for (int r = 0; r < neededRows; r++)
           dataGridView5.Rows.Add();

       for (int i = 0; i < force_sensor; i++)
       {
           string prefix = (i < 9) ? "0" : "";
           if (BenchTypeValue == "PC12" || BenchTypeValue == "PC21")
           {
               // only NO or YES
               dataGridView5.Rows[i / cols].Cells[i % cols].Value =
                   $"{prefix}{i+1}:NO   ";
           }
           else
           {
               // original 5‑state labels
               dataGridView5.Rows[i / cols].Cells[i % cols].Value =
                   $"S{prefix}{i+1}:Far";
           }
           dataGridView5.Rows[i / cols].Cells[i % cols].Style.BackColor = Color.White;
       }
   }
   ```

3) **Toggle only NO ↔ YES**  
   Update your `Control_Panel_Force_Sensors` handler to discriminate PC12/PC21:

   ```csharp
   private void Control_Panel_Force_Sensors(object sender, DataGridViewCellEventArgs e)
   {
       var cell = dataGridView5.CurrentCell;
       if (cell == null) return;

       string txt = cell.Value?.ToString() ?? "";

       if (BenchTypeValue == "PC12" || BenchTypeValue == "PC21")
       {
           // only NO ↔ YES
           if (txt.EndsWith("NO   "))
               cell.Value = txt.Replace("NO   ", "YES  ");
           else
               cell.Value = txt.Replace("YES  ", "NO   ");
       }
       else
       {
           // your old 5‑state cycle
           if (txt.Contains("Far"))   cell.Value = txt.Replace("Far",  "Near");
           else if (txt.Contains("Near"))  cell.Value = txt.Replace("Near", "Med");
           else if (txt.Contains("Med"))   cell.Value = txt.Replace("Med",  "Open");
           else if (txt.Contains("Open"))  cell.Value = txt.Replace("Open", "Short");
           else                            cell.Value = txt.Replace("Short","Far");
       }

       dataGridView5.DefaultCellStyle.SelectionBackColor = Color.Yellow;
       cell.Style.BackColor               = Color.Yellow;
       button2.Enabled                    = true;
   }
   ```

That’s it!  

1. **`groupBox6.Text`** now becomes “FORCE LLS” for PC12/PC21, otherwise it stays “FORCE SENSORS.”  
2. **`Init_F_SENSORS_Cells`** seeds 24 rows of either `XX:NO   ` (for LLS benches) or `SXX:Far` (for others).  
3. **`Control_Panel_Force_Sensors`** toggles between “NO   ” ↔ “YES  ” on those benches, and falls back to your 5‑state cycle for the rest.
